name: Docker Image CI

on:
  push:
  pull_request:
    branches: [ "master" ]
    
env:
  MODEL_NAME: taxi_fare_regressor
  MODEL_VERSION: 1
  MLFLOW_TRACKING_URI: databricks
  DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
  DATABRICKS_TOKEN:  ${{ secrets.DATABRICKS_TOKEN }}


jobs:
  download_artifacts:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.9.5

      - name: Install pip
        run: |
          python -m pip install --upgrade pip

      - name: Install dependencies and project in dev mode
        run: |
          pip install mlflow
      
      - name: download model artifacts from workspace√ü
        uses: jannekem/run-python-script-action@v1
        with:
          script: |
            import os
            from mlflow.tracking import MlflowClient
            import mlflow
            import shutil

            client = MlflowClient()
            model_version = client.get_model_version(
              name = os.environ["MODEL_NAME"],
              version = os.environ["MODEL_VERSION"]
            )
            run_id = model_version.run_id
            print(f"run id: {run_id}")

            # Download the artifact to local storage.
            local_dir = "ml_artifacts"
            remote_dir = "train/model"
            if not os.path.isdir(local_dir):
              os.mkdir(local_dir)

            print(f"local_dir: {local_dir}")
            print(f"local dir full path: {os.path.abspath(local_dir)}")
            local_path = client.download_artifacts(run_id, remote_dir, local_dir)

            full_path = f"{local_dir}/{remote_dir}"
            print(f"Artifacts downloaded in {full_path}: {os.listdir(full_path)}")

            # print(f"copying downloaded model artifacts to docker folder")
            # dest_path = "./service/ml_artifacts/train/model"
            # if not os.path.isdir(dest_path):
            #   os.makedirs(dest_path)

            # for file in os.listdir(full_path):
            #   if file != "code":
            #     shutil.copy2(os.path.join(full_path, file), dest_path)            
            # print(f"artifacts moved to service folder {dest_path} {os.listdir(dest_path)}")
            
      - name: Upload ml artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ml_artifacts
          path: ./ml_artifacts
      - shell: bash
        run: |
          ls ./ml_artifacts
  
  build_docker:
    runs-on: ubuntu-latest
    needs: download_artifacts
    steps:
      - name: Download ml artifacts to transfer to Docker image
        uses: actions/download-artifact@v3
        with:
          name: ml_artifacts
      - shell: bash
        run: |
          # cp ./ml_artifacts ./service/ml_artifacts
          ls

      - name: ACR build
        uses: azure/acr-build@v1
        with:
          service_principal: ${{ secrets.service_principal }}
          service_principal_password: ${{ secrets.service_principal_password }}
          tenant: ${{ secrets.tenant }}
          registry: ${{ secrets.registry }}
          repository: ${{ secrets.repository }}
          image: image
          git_access_token: ${{ secrets.GH_TOKEN }}
          folder: ./service
          dockerfile: ./Dockerfile
